# This is a basic workflow to help you get started with Actions

name: Dione Maven Build CI for Push to main branch  an deploy to oss sonatype snapshot repository

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout DIONE main branch from GitHub
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step 2 Set up JDK 1.8
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '8'
          distribution: 'zulu'
          check-latest: true

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
           GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
           PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
            java-version: 1.8
            server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
            server-username: OSSRH_USERNAME # env variable for username in deploy
            server-password: OSSRH_PASSWORD # env variable for token in deploy
            gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
            gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} # env variable for GPG private key passphrase


      # Runs a set of commands using the runners shell
      - name: Step 3 Buil Dione from main branch and upload to oss sonatype snapshot repository
        run: |
            cat /home/runner/.m2/settings.xml
            mvn  -e  -B -V deploy  -Ppublish --settings /home/runner/.m2/settings.xml --file pom.xml
        env:
          ITER_VALUE: ${{ secrets.ITER_VALUE }}
          K_VALUE: ${{ secrets.K_VALUE }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
