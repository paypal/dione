# This is a basic workflow to help you get started with Actions

name: Dione Maven Build CI for Pull request to main branch


# Controls when the workflow will run
on:
  # Triggers the workflow on every pull request
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_jar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout from GitHub
        uses: actions/checkout@v2

      - name: Setup Java env
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '8'
          distribution: 'zulu'
          check-latest: true

      - name: Maven build
        run:
            mvn -B -V clean install

      - name: Upload jar file
        uses: actions/upload-artifact@v2
        with:
          name: dione-spark-target
          path: |
            dione-hadoop/target/*.jar
            dione-spark/target/*.jar
            dione-spark/src/test/python

  python-api-tests:
    needs: build_jar
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '2.7', '3.6' ]

    steps:
      - name: Download the artifacts
        uses: actions/download-artifact@v2
        with:
          name: dione-spark-target

      - name: Setup Java env
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '8'
          distribution: 'zulu'
          check-latest: true

      - name: setup Python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: run Python API tests
        run: |
          find .
          export PYTHONPATH=`echo dione-spark/target/dione-spark-*-SNAPSHOT.jar`
          python -V
          pip install pytest pyspark==2.3.4
          echo ohad
          AVRO_JAR=$(find $(dirname `which python`)/../ -name "avro-1*.jar")
          rm $AVRO_JAR
          wget https://repo1.maven.org/maven2/org/apache/avro/avro/1.8.0/avro-1.8.0.jar
          AVRO_JAR_DIR=$(dirname $AVRO_JAR)
          mv avro-1.8.0.jar $AVRO_JAR_DIR
          pytest -v
